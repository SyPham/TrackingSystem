@model DemoDoan.Models.UserAccount

@{
    ViewBag.Title = "Create";
    var locations = (IEnumerable<DemoDoan.Dto.LocationDto>)ViewBag.Location;
    var teams = (IEnumerable<DemoDoan.Dto.TeamDto>)ViewBag.Team;
    var department = (IEnumerable<DemoDoan.Dto.DepartmentDto>)ViewBag.Department;
    
    var roles = (IEnumerable<DemoDoan.Models.Role>)ViewBag.RoleID;
    var user = (DemoDoan.ViewModel.UserVM)Session["ACCOUNT"];

}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-lg-12">
            <h2>Create</h2>
            <h4>UserAccount</h4>
        </div>
        <div class="col-lg-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Username)
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-lg-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Password)
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-lg-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Email)
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-lg-6">
            <div class="form-group">
                @Html.LabelFor(model => model.IDcardNumber)
                @Html.EditorFor(model => model.IDcardNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IDcardNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-lg-6">
            <div class="form-group">
                @Html.LabelFor(model => model.RoleID, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.RoleID, new SelectList(roles, "RoleID", "Name"), "- Please Select -", new { @class = "form-control", @id = "roleID" })
                @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="col-lg-6">
            <div class="form-group">
                @Html.LabelFor(model => model.DepartmentID)
                @Html.DropDownListFor(model => model.DepartmentID, new SelectList(department, "DepartmentID", "Name"), "- Please Select -", new { @class = "form-control Department", @id = "departmentID" })
                @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-lg-6">

            <div class="form-group">
                @Html.LabelFor(model => model.TeamID, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.TeamID, new SelectList(teams, "ID", "Name"), "- Please Select -", new { @class = "form-control Team", @id = "teamID" })
                @Html.ValidationMessageFor(model => model.TeamID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-lg-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Status)
                <div class="checkbox">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-lg-12">

            <div class="form-group">
                <input type="submit" StaticResource.Resource.General_Create class="btn btn-default" />
            </div>
        </div>
        <div class="col-lg-12">
            @Html.ActionLink(StaticResource.Resource.General_BackToList, "Index", null, htmlAttributes: new { @class = "btn btn-primary btn-sm" })
        </div>
    </div>
}
@section scripts
    {
    <script>

        $(function () {
            var roleCode = @Html.Raw(Json.Encode(user.RoleCode));
            var departmentID = @Html.Raw(Json.Encode(user.DepartmentID));

            var teamID = @Html.Raw(Json.Encode(user.TeamID));
            if (roleCode === DEPTHEAD) {
                    $(".Department").prop('disabled', true);
                $('.Department').val(departmentID);
                $.ajax({
                    url: "/UserAccounts/GetbyDepartment" , /*cach 2 + departmentID,  */
                    data: {departmentID :departmentID} ,//cach1:
                     type: "GET",
                     dataType: "json",
                    success: function (response) {
                        if (response.status) {
                            var option = '';
                            //vong lap sinh ra item.TeamID va item.Nametrong bang Teams (jquery), dien  @*@id*@ = "teamID" vao dropdown team can lay o tren
                            $.each(response.data, function (i, item) {
                               option+= `<option value="${item.TeamID}">${item.Name}</option>`
                            })
                            //clear
                            $('#teamID').empty();
                            //
                            $('#teamID').append(option);
                            //`<option value="${item.Number}">${item.Content}</option>`
                            //$("#teamID").append('');
                                    //('<option value="'+ key +'">'+ value +'</option>');
                        }
                    },
                    error: function (response) {
                        alert("error!");  //
                    }
                    });
            }
            if (roleCode === SUP) {
                $('.Department').val(departmentID);
                $('.Team').val(teamID);
                $(".Department, .Team").prop('disabled', true);

            }
             if (roleCode === ADM) {
                  $('#departmentID').off('change').on('change', function () {
                var departmentID = $(this).val();


                $.ajax({
                    url: "/UserAccounts/GetbyDepartment" , /*cach 2 + departmentID,  */
                    data: {departmentID :departmentID} ,//cach1:
                     type: "GET",
                     dataType: "json",
                    success: function (response) {
                        if (response.status) {
                            var option = '';
                            //vong lap sinh ra item.TeamID va item.Nametrong bang Teams (jquery), dien  @*@id*@ = "teamID" vao dropdown team can lay o tren
                            $.each(response.data, function (i, item) {
                               option+= `<option value="${item.TeamID}">${item.Name}</option>`
                            })
                            //clear
                            $('#teamID').empty();
                            //
                            $('#teamID').append(option);
                            //`<option value="${item.Number}">${item.Content}</option>`
                            //$("#teamID").append('');
                                    //('<option value="'+ key +'">'+ value +'</option>');
                        }
                    },
                    error: function (response) {
                        alert("error!");  //
                    }

                });
            });
            }
          
        });
    </script>
}
